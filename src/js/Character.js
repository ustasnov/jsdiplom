/* eslint-disable max-len */
import { roundToInt } from './utils';

/**
 * –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å, –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—Å–ª–µ–¥—É—é—Ç—Å—è –∫–ª–∞—Å—Å—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
 * @property level - —É—Ä–æ–≤–µ–Ω—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –æ—Ç 1 –¥–æ 4
 * @property attack - –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –∞—Ç–∞–∫–∏
 * @property defence - –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –∑–∞—â–∏—Ç—ã
 * @property health - –∑–¥–æ—Ä–æ–≤—å–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
 * @property type - —Å—Ç—Ä–æ–∫–∞ —Å –æ–¥–Ω–∏–º –∏–∑ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π:
 * swordsman
 * bowman
 * magician
 * daemon
 * undead
 * vampire
 */
export default class Character {
  constructor(level, type = 'generic') {
    this.level = level;
    this.attack = 0;
    this.defence = 0;
    this.health = 50;
    this.type = type;
    this.id = -1;
    // TODO: –≤—ã–±—Ä–æ—Å–∏—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫—Ç–æ-—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç "new Character()"
    if (new.target.name === 'Character') {
      throw new Error('You cannot instantiate this class!');
    }
  }

  getTooltip() {
    return `üéñ ${this.level} ‚öî ${this.attack} üõ° ${this.defence} ‚ù§ ${this.health}`;
  }

  increaseLevel(newLevel) {
    for (let i = this.level; i < newLevel; i += 1) {
      if (this.health > 1) {
        this.attack = Math.max(this.attack, roundToInt((80 + this.health) * (this.attack / 100)));
        this.defence = Math.max(this.defence, roundToInt((80 + this.health) * (this.defence / 100)));
        this.level += 1;
      }
      this.health = Math.min(this.health + 80, 100);
    }
  }
}
